/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

//INI FORM PENAMBAHAN KANDANG
package kkp_klinik;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JTextField;

import java.time.format.DateTimeFormatter;  
import java.time.LocalDateTime;    
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Xander001
 */
public class form_kandang extends javax.swing.JFrame {

    /**
     * Creates new form form_kandang
     */
    public Statement st;
    public ResultSet rs;
    Connection cn = DBMS.mysql_connector.open_con();
    public form_kandang() {
        initComponents();
        print_data();
        
    }
    private void print_data(){
        try{
            String query_print = "SELECT * FROM stock_kd";
            st = cn.createStatement();
            rs = st.executeQuery(query_print);
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID");
            model.addColumn("Kategori");
            model.addColumn("Harga");
            model.addColumn("Tanggal");
            
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);
            while (rs.next()){
                Object [] data = {
                    rs.getString("id_KD"),
                    rs.getString("category_KD"),
                    rs.getString("harga_KD"),
                    rs.getString("tgl_KD"),
                };
                model.addRow(data);
                tabel_kd.setModel(model);
            }
        }
        catch (Exception e){
//            return null;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        id_kd = new javax.swing.JTextField();
        harga_kd = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        batal = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_kd = new javax.swing.JTable();
        category_kd = new javax.swing.JComboBox<>();
        tgl_kd = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID Kadang : ");

        jLabel2.setText("Category");

        jLabel3.setText("Harga");

        jLabel4.setText("Tanggal");

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        batal.setText("Cancel");
        batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalActionPerformed(evt);
            }
        });

        hapus.setText("Delete");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        tabel_kd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Kategori", "Harga", "Tanggal"
            }
        ));
        tabel_kd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_kdMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel_kd);

        category_kd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-------", "ekonomi", "bisnis", "eksekutif" }));
        category_kd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_kdActionPerformed(evt);
            }
        });

        tgl_kd.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(id_kd, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(harga_kd, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .addComponent(category_kd, 0, 171, Short.MAX_VALUE)
                                    .addComponent(tgl_kd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(save)
                                .addGap(18, 18, 18)
                                .addComponent(hapus)
                                .addGap(18, 18, 18)
                                .addComponent(batal)))
                        .addGap(0, 104, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(id_kd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(category_kd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(harga_kd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(tgl_kd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(batal)
                    .addComponent(hapus))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        try{
            String id = id_kd.getText();
            String kategori = category_kd.getSelectedItem().toString();
            
            String tgl = ((JTextField)tgl_kd.getDateEditor().getUiComponent()).getText();
            
            st = cn.createStatement();
//            harga default kandang
            if (kategori == "ekonomi"){
                int harga = 10000;
                String insert_data = String.format("INSERT INTO stock_kd Values ('%s','%s',%s,'%s')",id,kategori,harga,tgl);
                st.execute(insert_data);
            }
            else if (kategori == "bisnis"){
                int harga = 30000;
                String insert_data = String.format("INSERT INTO stock_kd Values ('%s','%s',%s,'%s')",id,kategori,harga,tgl);
                st.execute(insert_data);
            }
            else if (kategori == "eksekutif"){
                int harga = 50000;
                String insert_data = String.format("INSERT INTO stock_kd Values ('%s','%s',%s,'%s')",id,kategori,harga,tgl);
                st.execute(insert_data);
            }
            print_data();
        }
        catch(Exception e){
            
        }
        // form
        

    }//GEN-LAST:event_saveActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
        if (id_kd.getText().equals("")){
            JOptionPane.showMessageDialog(this, "choice data");
        }
        else{
            int confrim = JOptionPane.showConfirmDialog(null, "are you sure ?", "Danger", JOptionPane.YES_NO_OPTION);
            if (confrim == 0){
                try {
                    st = cn.createStatement();
                    
                    String query_delete = String.format("DELETE FROM stock_kd WHERE id_KD=%s",id_kd.getText());
                    st.executeUpdate(query_delete);
                    JOptionPane.showMessageDialog(null, "Berhasil di hapus");
                    print_data();
//                    clean();
                }
                catch (Exception e){
                    JOptionPane.showMessageDialog(null,e);
                }
            }
        }
    }//GEN-LAST:event_hapusActionPerformed

    private void batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_batalActionPerformed

    private void tabel_kdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_kdMouseClicked
        // TODO add your handling code here:
        int row_table = tabel_kd.getSelectedRow();
        id_kd.setText(tabel_kd.getValueAt(row_table,0).toString());
    }//GEN-LAST:event_tabel_kdMouseClicked

    private void category_kdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_kdActionPerformed
        String kategori = category_kd.getSelectedItem().toString();
        if (kategori == "ekonomi"){
            harga_kd.setText("10000");
        }
        else if (kategori == "bisnis"){
            harga_kd.setText("30000");
        }
        else if (kategori == "eksekutif"){
            harga_kd.setText("50000");    
        }
    }//GEN-LAST:event_category_kdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form_kandang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form_kandang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form_kandang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form_kandang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new form_kandang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton batal;
    private javax.swing.JComboBox<String> category_kd;
    private javax.swing.JButton hapus;
    private javax.swing.JTextField harga_kd;
    private javax.swing.JTextField id_kd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton save;
    private javax.swing.JTable tabel_kd;
    private com.toedter.calendar.JDateChooser tgl_kd;
    // End of variables declaration//GEN-END:variables

    private DateTimeFormatter DateTimeFormatter(String yyyyMMdd) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
